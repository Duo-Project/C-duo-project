@using XmlCrud.App_Code;
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;
@{
    var filePath = HttpContext.Current.Server.MapPath(@"~/App_Data/Playlist.json");
    string json = File.ReadAllText(filePath);
    var jObject = JObject.Parse(json);
    //get last node of the playlist
    var lastNode = jObject.SelectToken("songs").Last;
    //get the the id of the last node
    var lastId = lastNode.SelectToken("id").ToString();
    //transfer it to int
    var stringId = int.Parse(lastId);
    //add +1 to the last id
    var newId = stringId + 1;
}
<!DOCTYPE html>

<html>
<head>
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/custom/createsong.css" rel="stylesheet" />
    <link href="~/Content/custom/index.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.0.0.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <title>CreateSong JSON || CRUD</title>
</head>
<body>
    <div class="jumbotron">
        <h1>JSON CRUD</h1>
        <p>Add Song - Voeg een nieuw nummer toe aan de database!</p>
    </div>
    <div>
        <form method="post" enctype="multipart/form-data">
            <table class="table">
                <tr>
                    <td>ID:</td>
                    <td><input type="text" name="id" readonly value="@newId" /></td>
                </tr>
                <tr>
                    <td>Artist:</td>
                    <td><input type="text" name="artist" /></td>
                </tr>
                <tr>
                    <td>Titel:</td>
                    <td><input type="text" name="title" /></td>
                </tr>
                <tr>
                    <td>Jaar:</td>
                    <td><input type="text" name="year" /></td>
                </tr>
                <tr>
                    <td>Genre:</td>
                    <td><input type="text" name="genre" /></td>
                </tr>
                <tr>
                    <td>Tijd:</td>
                    <td><input type="text" name="time" /></td>
                </tr>
                <tr>
                    <td>File:</td>
                    <td><input type="file" name="file" /></td>
                </tr>
                <tr>
                    <td><input type="submit" name="CANCEL" value="CANCEL" class="btn btn-primary" onclick="return confirm('are you sure?')" ; /></td>
                    <td><input type="submit" name="SAVE" value="SAVE" class="btn btn-primary" /></td>
                </tr>
            </table>
        </form>

        @if (IsPost)
        {
            if (Request.Form["SAVE"] == "SAVE")
            {
                HttpPostedFileBase postedFile = Request.Files["file"];
                if (postedFile != null && postedFile.ContentLength > 0)
                {
                    //save the file
                    string filepath = Server.MapPath("~/Uploads/json/") + Path.GetFileName(postedFile.FileName);
                    string filename = Path.GetFileName(postedFile.FileName);
                    postedFile.SaveAs(filepath);
                    //add song
                    //get all data for new song
                    var id = newId;
                    var artist = Request.Form["artist"];
                    var title = Request.Form["title"];
                    var year = Request.Form["year"];
                    var genre = Request.Form["genre"];
                    var time = Request.Form["time"];
                    var file = Request.Form["file"];
                    //make a new node
                    var newSongNode = "{ 'id': '" + id + "', 'artist': '" + artist + "', 'title': '" + title + "', 'year': '" + year + "', 'genre': '" + genre + "', 'time': '" + time + "', 'file': '" + filename + "',}";
                    var jsonObject = JObject.Parse(json);
                    var songArray = jsonObject.GetValue("songs") as JArray;
                    var newSong = JObject.Parse(newSongNode);
                    songArray.Add(newSong);
                    jsonObject["songs"] = songArray;
                    string newResult = Newtonsoft.Json.JsonConvert.SerializeObject(jsonObject, Newtonsoft.Json.Formatting.Indented);
                    //write new node to the playlist
                    File.WriteAllText(filePath, newResult);
                    Response.Redirect(@"~/indexJson.cshtml");
                }
            }
            if (Request.Form["CANCEL"] == "CANCEL")
            {
                Response.Redirect(@"~/indexJson.cshtml");
            }
        }

    </div>
    <div class="copy card-footer">
        &copy; 2020 Copyright: <a>Bjorn van der Horst & Yorick Bosman</a>
    </div>
</body>
</html>

