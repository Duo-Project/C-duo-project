@using XmlCrud.App_Code;
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;
@{
    
    var jsonInput = File.ReadAllText(HttpContext.Current.Server.MapPath(@"~/App_Data/Playlist.json"));
    var filePath = HttpContext.Current.Server.MapPath(@"~/App_Data/Playlist.json");
    string json = File.ReadAllText(filePath);
    string id = Request.QueryString["id"];

    var jObject = JObject.Parse(json);

    var currentNode = jObject.SelectToken("songs[?(@.id == '"+id+"')]");
    var currentSongId = currentNode.SelectToken("id").ToString();
    var currentSongArtist = currentNode.SelectToken("artist").ToString();
    var currentSongTitle = currentNode.SelectToken("title").ToString();
    var currentSongYear = currentNode.SelectToken("year").ToString();
    var currentSongGenre = currentNode.SelectToken("genre").ToString();
    var currentSongTime = currentNode.SelectToken("time").ToString();
    var currentSongFile = currentNode.SelectToken("file").ToString();
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    <div>
        <form method="post" enctype="multipart/form-data">
            <table class="table table-bordered">
                <tr>
                    <th>Id</th>
                    <th>Artist</th>
                    <th>Title</th>
                    <th>Year</th>
                    <th>Gerne</th>
                    <th>Time</th>
                    <th>File</th>
                    <th>Update song file*</th>
                </tr>
                <tr>
                    <td><input type="text" value="@currentSongId" readonly /> </td>
                    <td><input type="text" value="@currentSongArtist" name="artist"></td>
                    <td><input type="text" value="@currentSongTitle" name="title" /></td>
                    <td><input type="text" value="@currentSongYear" name="year" /></td>
                    <td><input type="text" value="@currentSongGenre" name="genre" /></td>
                    <td><input type="text" value="@currentSongTime" name="time" /></td>
                    <td><input type="text" value="@currentSongFile" readonly name="file"/></td>
                    <td><input type="file" value="@currentSongFile" name="songFile" /></td>
                    <td><input type="radio" name="updateSong" value="ja"/></td>
                </tr>


                <tr>
                    <td><input type="submit" value="SAVE" name="submit" /></td>

                </tr>

            </table>
        </form>
        <p>*IF you want to update the music file, pls check the box, and select a file from your pc</p>

    </div>
    @{
        if (IsPost)
        {
            string filename = "";
            //check als de songfile geupdate moet worden
            if (Request.Form["updateSong"] == "ja")
            {
                HttpPostedFileBase postedFile = Request.Files["songfile"];
                if (postedFile != null && postedFile.ContentLength > 0)
                {
                    //save the file
                    string filepath = Server.MapPath("~/Uploads/json/") + Path.GetFileName(postedFile.FileName);
                    filename = Path.GetFileName(postedFile.FileName);
                    postedFile.SaveAs(filepath);
                }

            }
            //zonder deze else wordt de naam blank
            else
            {
                filename = currentSongFile;
            }
            JArray songArray = (JArray)jObject["songs"];
            var artistId = Convert.ToInt32(id);
            if (artistId > 0)
            {
                var newArtist = Request.Form["artist"];
                var newTitle = Request.Form["title"];
                var newYear = Request.Form["year"];
                var newGenre = Request.Form["genre"];
                var newTime = Request.Form["time"];
                var newFile = filename;

                foreach (var song in songArray.Where(obj => obj["id"].Value<int>() == artistId))
                {
                    song["artist"] = !string.IsNullOrEmpty(newArtist) ? newArtist : "";
                    song["title"] = !string.IsNullOrEmpty(newTitle) ? newTitle : "";
                    song["year"] = !string.IsNullOrEmpty(newYear) ? newYear : "";
                    song["genre"] = !string.IsNullOrEmpty(newGenre) ? newGenre : "";
                    song["time"] = !string.IsNullOrEmpty(newTime) ? newTime : "";
                    song["file"] = !string.IsNullOrEmpty(newFile) ? newFile : "";

                }
                jObject["songs"] = songArray;
                string output = Newtonsoft.Json.JsonConvert.SerializeObject(jObject, Newtonsoft.Json.Formatting.Indented);
                File.WriteAllText(filePath, output);
                Response.Redirect(@"~/indexJson.cshtml");
            }
            else
            {
                        <script>alert("KAPOET")</script>
            }
        }
    }
    }
</body>
</html>
