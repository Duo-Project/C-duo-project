@using XmlCrud.App_Code;
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;


@{
    var jsonInput = File.ReadAllText(HttpContext.Current.Server.MapPath(@"~\App_Data\Playlist.json"));
    Songs songs = Newtonsoft.Json.JsonConvert.DeserializeObject<Songs>(jsonInput);

    var filePath = HttpContext.Current.Server.MapPath(@"~/App_Data/Playlist.json");
    string json = File.ReadAllText(filePath);
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/custom/index.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.0.0.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
</head>
<body>
    <div class="jumbotron">
        <h1>JSON CRUD</h1>
        <p>Songs overview</p>
    </div>
    <div class="content">
        <table class="table table-bordered">
            <tr>
                <th>Id</th>
                <th>Artist</th>
                <th>Title</th>
                <th>Year</th>
                <th>Genre</th>
                <th>Time</th>
                <th>File</th>
            </tr>
            @foreach (Song song in songs.songs) {
                if (song.id == "0") {}
                else {
                <tr>
                    <td>@song.id</td>
                    <td>@song.artist</td>
                    <td>@song.title</td>
                    <td>@song.year</td>
                    <td>@song.genre</td>
                    <td>@song.time</td>
                    <td>@song.file</td>
                    <td><a href="~/Pages/json/EditSong.cshtml?id=@song.id"><i class="fa fa-edit"></i></a></td>
                    <td><a onclick="return confirm('are you sure?')" ; href="~/indexJson.cshtml?action=delete&id=@song.id"><i class="fa fa-trash"></i></a></td>
                    <td><i class="fa fa-play" onclick="document.getElementById('@song.id').play();document.getElementById('@song.id a').style.display = 'block' "></i><audio id="@song.id" src="~/Uploads/json/@song.file"></audio>
                    <td><i id="@song.id a" style="display:none;" class="fa fa-pause" onclick="document.getElementById('@song.id').pause(); document.getElementById('@song.id a').style.display= 'none' "></i></td>
                </tr>
                    }
                }
        </table>
        <br /><br />
        <a href="Pages\json\createSong.cshtml" class="btn btn-primary">Nieuw nummer toevoegen</a>
        <br /><br />
        <a href="~/index.cshtml" class="btn btn-primary">XML Gedeelte</a>
    </div>
    @{
        var uri = new Uri(HttpContext.Current.Request.Url.AbsoluteUri);
        var query = HttpUtility.ParseQueryString(uri.Query);
        var var2 = query.Get("action");
        if (var2 == "delete") {
            if (Request.QueryString["id"] == "0") {
                <script>alert("Sorry You cant delete this one!!")</script>
            }
            else if (Request.QueryString["id"] != "0") {
                var jObject = JObject.Parse(json);
                JArray songArray = (JArray)jObject["songs"];
                var songId = Request.QueryString["id"];
                var intSongId = int.Parse(songId);
                if (intSongId > 0) {
                    var songName = string.Empty;
                    var songToDelete = songArray.FirstOrDefault(obj => obj["id"].Value<string>() == songId);
                    songArray.Remove(songToDelete);

                    string output = Newtonsoft.Json.JsonConvert.SerializeObject(jObject, Newtonsoft.Json.Formatting.Indented);
                    File.WriteAllText(filePath, output);
                    Response.Redirect(@"~/indexJson.cshtml");
                }
                else {
                    return;
                }
            }
        }
    }
</body>
</html>
